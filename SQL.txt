Query the average population for all cities in CITY, rounded down to the nearest integer.

Input Format

The CITY table is described as follows:

SELECT ROUND(AVG(POPULATION)) AS AVGPOPULATION FROM CITY

---------------------------------------------------------------------------------------------------
Query the sum of the populations for all Japanese cities in CITY. The COUNTRYCODE for Japan is JPN.

SELECT SUM(POPULATION) FROM CITY WHERE COUNTRYCODE = 'JPN'

---------------------------------------------------------------------------------------------------

Query the difference between the maximum and minimum populations in CITY.

Input Format

SELECT MAX(POPULATION) - MIN(POPULATION) AS POPULATIONDIFF FROM CITY
---------------------------------------------------------------------------------------------------

Samantha was tasked with calculating the average monthly salaries for all employees in the EMPLOYEES table, but did not realize her keyboard's  key was broken until after completing the calculation. She wants your help finding the difference between her miscalculation (using salaries with any zeros removed), and the actual average salary.

Write a query calculating the amount of error (i.e.:  average monthly salaries), and round it up to the next integer.

SELECT CEIL(AVG(Salary) - AVG(REPLACE(Salary,'0',''))) FROM EMPLOYEES

----------------------------------------------------------------------------------------------
We define an employee's total earnings to be their monthly  worked, and the maximum total earnings to be the maximum total earnings for any employee in the Employee table. Write a query to find the maximum total earnings for all employees as well as the total number of employees who have maximum total earnings. Then print these values as  space-separated integers.

SELECT MAX(salary * months), COUNT(*)
FROM Employee
GROUP BY salary * months 
ORDER BY salary * months DESC
Limit 1;

-----------------------------------------------------------------------------------------------
Query the following two values from the STATION table:

The sum of all values in LAT_N rounded to a scale of 2 decimal places.
The sum of all values in LONG_W rounded to a scale of 2 decimal places.
Input Format
lat_n long_w

SELECT ROUND(SUM(LAT_N),2), ROUND(SUM(LONG_W),2)
FROM STATION;

--------------------------------------------------------------------------------------------------
Query the sum of Northern Latitudes (LAT_N) from STATION having values greater than 38.7880  and less than 137.2345. Truncate your answer to  decimal places.

SELECT ROUND(SUM(LAT_N),4)
FROM STATION
WHERE LAT_N BETWEEN 38.7880 AND 137.2345


----------------------------------------------------------------------------------------------------
Query the greatest value of the Northern Latitudes (LAT_N) from STATION that is less than 137.2345. Truncate your answer to 4 decimal places.

SELECT ROUND(MAX(LAT_N),4)
FROM STATION
WHERE LAT_N < 137.2345

-------------------------------------------------------------------------------------------------------
Query the Western Longitude (LONG_W) for the largest Northern Latitude (LAT_N) in STATION that is less than 137.2345. Round your answer to 4 decimal places.

SELECT ROUND(LONG_W,4)
FROM STATION 
WHERE LAT_N = (SELECT MAX(LAT_N)FROM STATION WHERE LAT_N < 137.2345);


-------------------------------------------------------------------------------------------------------
Query the smallest Northern Latitude (LAT_N) from STATION that is greater than 38.7880. Round your answer to 4 decimal places.

SLECT ROUND(MIN(LAT_N),4)
FROM STATION
WHERE LAT_N > 38.7880


----------------------------------------------------------------------------------------------------
Query the Western Longitude (LONG_W)where the smallest Northern Latitude (LAT_N) in STATION is greater than 38.7780. Round your answer to 4 decimal places.

SELECT ROUND(LONG_W,4)
FROM STATION
WHERE LAT_N = (SELECT MIN(LAT_N) FROM STATION WHERE LAT_N >38.7780);


-----------------------------------------------------------------------------------------------------

Consider P1(a, b) and P2(c, d) be two points on 2D plane, where (a, b) be minimum and maximum values of Northern Latitude and (c, d) be minimum and maximum values of Western Longitude.
Write a query to print the Manhattan Distance between points P1 and P2 up to 4 decimal digits.

SELECT ROUND(ABS(A - C) + ABS(B - D),4)
FROM(
    SELECT MIN(LAT_N) AS A, MIN(LONG_W) AS B, MAX(LAT_N) AS C, MAX(LONG_W) AS D
    FROM STATION
) AS MD;

------------------------------------------------------------------------------------------------------------

Consider P1(a, b) and P2(c, d) be two points on 2D plane, where (a, b) be minimum and maximum values of Northern Latitude and (c, d) be minimum and maximum values of Western Longitude.
Write a query to print the Euclidean Distance between points P1 and P2 up to 4 decimal digits.

SELECT ROUND(
    SQRT((POWER(ABS(MAX(LAT_N) - MIN(LAT_N)),2))+(POWER(ABS(MAX(LONG_W) - MIN(LONG_W)),2))),4)
    FROM STATION


---------------------------------------------------------------------------------------------------------------

